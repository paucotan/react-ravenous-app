{"ast":null,"code":"var _jsxFileName = \"/Users/ocean/code/paucotan/personal_projects/codeacademy/react-ravenous-app/src/components/SearchBar/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./SearchBar.module.css\";\nimport yelp from \"../../utils/yelp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\"\n};\nconst SearchBar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"best_match\");\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n  const handleSortByChange = sortByOption => {\n    setSortBy(sortByOption);\n  };\n  const handleSearch = async event => {\n    // Add logic to search using searchTerm, location, and sortBy\n    event.preventDefault();\n    const businesses = await yelp.search(searchTerm, location, sortBy);\n    // \n  };\n\n  /*\n  The logic:\n  Make handleSearch async.\n  Call the Yelp search function with the user’s input.\n  Pass the results up to the parent (using a prop function) to update the displayed businesses.\n  This will connect your search bar to the Yelp API.Yes, that’s the right place! In your handleSearch function, instead of console.log, you want to call your Yelp API search function with searchTerm, location, and sortBy.\n  You’ll also want to make sure the results update your business list. Usually, you do this by calling a function passed down from the parent component (like App.js) as a prop, and passing the results to it.\n  So, the next step is:\n  Make handleSearch async.\n  Call your Yelp search function with the three values.\n  Use the results to update the business list in your app.\n  */\n\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSortByChange(sortByOptionValue),\n        className: sortBy === sortByOptionValue ? styles.active : \"\",\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.SearchBar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchBarSortOptions,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderSortByOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchBarFields,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSearchTermChange,\n        placeholder: \"Search Businesses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleLocationChange,\n        placeholder: \"Where?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchBarSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: handleSearch,\n        children: \"Let's Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"1DMJpBk48vV/s/Fd9caILhBkEnk=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","styles","yelp","jsxDEV","_jsxDEV","sortByOptions","SearchBar","_s","searchTerm","setSearchTerm","location","setLocation","sortBy","setSortBy","handleSearchTermChange","event","target","value","handleLocationChange","handleSortByChange","sortByOption","handleSearch","preventDefault","businesses","search","renderSortByOptions","Object","keys","map","sortByOptionValue","onClick","className","active","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchBarSortOptions","SearchBarFields","onChange","placeholder","SearchBarSubmit","_c","$RefreshReg$"],"sources":["/Users/ocean/code/paucotan/personal_projects/codeacademy/react-ravenous-app/src/components/SearchBar/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./SearchBar.module.css\";\nimport yelp from \"../../utils/yelp\";\n\n\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\",\n};\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"best_match\");\n\n  const handleSearchTermChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n  };\n\n  const handleSortByChange = (sortByOption) => {\n    setSortBy(sortByOption);\n  };\n  const handleSearch = async (event) => {\n    // Add logic to search using searchTerm, location, and sortBy\n    event.preventDefault();\n    const businesses = await yelp.search(searchTerm, location, sortBy);\n    // \n  }\n\n\n  /*\n  The logic:\n\nMake handleSearch async.\nCall the Yelp search function with the user’s input.\nPass the results up to the parent (using a prop function) to update the displayed businesses.\nThis will connect your search bar to the Yelp API.Yes, that’s the right place! In your handleSearch function, instead of console.log, you want to call your Yelp API search function with searchTerm, location, and sortBy.\n\nYou’ll also want to make sure the results update your business list. Usually, you do this by calling a function passed down from the parent component (like App.js) as a prop, and passing the results to it.\n\nSo, the next step is:\n\nMake handleSearch async.\nCall your Yelp search function with the three values.\nUse the results to update the business list in your app.\n  */\n\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map((sortByOption) => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return <li\n                onClick={() => handleSortByChange(sortByOptionValue)}\n                key={sortByOptionValue}\n                className={sortBy === sortByOptionValue ? styles.active : \"\"}\n                >\n                  {sortByOption}\n              </li>;\n    });\n  };\n\n  return (\n    <div className={styles.SearchBar}>\n      <div className={styles.SearchBarSortOptions}>\n        <ul>{renderSortByOptions()}</ul>\n      </div>\n      <div className={styles.SearchBarFields}>\n        <input onChange={handleSearchTermChange} placeholder=\"Search Businesses\" />\n        <input onChange={handleLocationChange} placeholder=\"Where?\" />\n      </div>\n      <div className={styles.SearchBarSubmit}>\n        <a onClick={handleSearch}>Let's Go</a>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}